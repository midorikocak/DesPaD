(compilationUnit (packageDeclaration package (qualifiedName org . zkoss . zest . sys) ;) (importDeclaration import (qualifiedName java . io . IOException) ;) (importDeclaration import (qualifiedName javax . servlet . ServletContext) ;) (importDeclaration import (qualifiedName javax . servlet . ServletRequest) ;) (importDeclaration import (qualifiedName javax . servlet . ServletResponse) ;) (importDeclaration import (qualifiedName javax . servlet . FilterChain) ;) (importDeclaration import (qualifiedName javax . servlet . Filter) ;) (importDeclaration import (qualifiedName javax . servlet . FilterConfig) ;) (importDeclaration import (qualifiedName javax . servlet . ServletException) ;) (importDeclaration import (qualifiedName javax . servlet . http . HttpServletRequest) ;) (importDeclaration import (qualifiedName javax . servlet . http . HttpServletResponse) ;) (importDeclaration import (qualifiedName org . zkoss . lang . Classes) ;) (importDeclaration import (qualifiedName org . zkoss . util . logging . Log) ;) (importDeclaration import (qualifiedName org . zkoss . zest . sys . Parser) ;) (importDeclaration import (qualifiedName org . zkoss . zest . sys . impl . ParserImpl) ;) (typeDeclaration (classOrInterfaceModifier public) (classDeclaration class ZestFilter implements (typeList (type (classOrInterfaceType Filter))) (classBody { (classBodyDeclaration (modifier (classOrInterfaceModifier private)) (modifier (classOrInterfaceModifier static)) (modifier (classOrInterfaceModifier final)) (memberDeclaration (fieldDeclaration (type (classOrInterfaceType Log)) (variableDeclarators (variableDeclarator (variableDeclaratorId log) = (variableInitializer (expression (expression (expression (primary Log)) . lookup) ( (expressionList (expression (primary (type (classOrInterfaceType ZestManager)) . class))) ))))) ;))) (classBodyDeclaration (modifier (classOrInterfaceModifier private)) (memberDeclaration (fieldDeclaration (type (classOrInterfaceType ZestManager)) (variableDeclarators (variableDeclarator (variableDeclaratorId _manager))) ;))) (classBodyDeclaration (modifier (classOrInterfaceModifier (annotation @ (annotationName (qualifiedName Override))))) (modifier (classOrInterfaceModifier public)) (memberDeclaration (methodDeclaration void doFilter (formalParameters ( (formalParameterList (formalParameter (type (classOrInterfaceType ServletRequest)) (variableDeclaratorId request)) , (formalParameter (type (classOrInterfaceType ServletResponse)) (variableDeclaratorId response)) , (formalParameter (type (classOrInterfaceType FilterChain)) (variableDeclaratorId chain))) )) throws (qualifiedNameList (qualifiedName IOException) , (qualifiedName ServletException)) (methodBody (block { (blockStatement (statement if (parExpression ( (expression (expression ! (expression (primary ( (expression (expression (primary request)) instanceof (type (classOrInterfaceType HttpServletRequest))) )))) || (expression ! (expression (expression (expression (primary _manager)) . action) ( (expressionList (expression ( (type (classOrInterfaceType HttpServletRequest)) ) (expression (primary request))) , (expression ( (type (classOrInterfaceType HttpServletResponse)) ) (expression (primary response)))) )))) )) (statement (statementExpression (expression (expression (expression (primary chain)) . doFilter) ( (expressionList (expression (primary request)) , (expression (primary response))) ))) ;))) }))))) (classBodyDeclaration (modifier (classOrInterfaceModifier (annotation @ (annotationName (qualifiedName Override))))) (modifier (classOrInterfaceModifier public)) (memberDeclaration (methodDeclaration void destroy (formalParameters ( )) (methodBody (block { (blockStatement (statement (statementExpression (expression (expression (expression (primary _manager)) . destroy) ( ))) ;)) (blockStatement (statement (statementExpression (expression (expression (primary _manager)) = (expression (primary (literal null))))) ;)) }))))) (classBodyDeclaration (modifier (classOrInterfaceModifier (annotation @ (annotationName (qualifiedName Override))))) (modifier (classOrInterfaceModifier public)) (modifier (classOrInterfaceModifier final)) (memberDeclaration (methodDeclaration void init (formalParameters ( (formalParameterList (formalParameter (type (classOrInterfaceType FilterConfig)) (variableDeclaratorId config))) )) throws (qualifiedNameList (qualifiedName ServletException)) (methodBody (block { (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (variableModifier final) (type (classOrInterfaceType ServletContext)) (variableDeclarators (variableDeclarator (variableDeclaratorId ctx) = (variableInitializer (expression (expression (expression (primary config)) . getServletContext) ( )))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (variableModifier final) (type (classOrInterfaceType ZestManager)) (variableDeclarators (variableDeclarator (variableDeclaratorId oldManager) = (variableInitializer (expression (expression (expression (primary ZestManager)) . getManager) ( (expressionList (expression (primary ctx))) )))))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (variableModifier final) (type (classOrInterfaceType Parser)) (variableDeclarators (variableDeclarator (variableDeclaratorId parser)))) ;)) (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (type (classOrInterfaceType String)) (variableDeclarators (variableDeclarator (variableDeclaratorId clsnm) = (variableInitializer (expression (expression (expression (primary config)) . getInitParameter) ( (expressionList (expression (primary (literal "parser-class")))) )))))) ;)) (blockStatement (statement (statementExpression (expression (expression (primary parser)) = (expression (expression (expression (primary clsnm)) != (expression (primary (literal null)))) ? (expression ( (type (classOrInterfaceType Parser)) ) (expression (expression (primary newInstance)) ( (expressionList (expression (primary clsnm)) , (expression (primary (type (classOrInterfaceType Parser)) . class))) ))) : (expression new (creator (createdName ParserImpl) (classCreatorRest (arguments ( )))))))) ;)) (blockStatement (statement (statementExpression (expression (expression (primary clsnm)) = (expression (expression (expression (primary config)) . getInitParameter) ( (expressionList (expression (primary (literal "manager-class")))) )))) ;)) (blockStatement (statement (statementExpression (expression (expression (primary _manager)) = (expression (expression (expression (primary clsnm)) != (expression (primary (literal null)))) ? (expression ( (type (classOrInterfaceType ZestManager)) ) (expression (expression (primary newInstance)) ( (expressionList (expression (primary clsnm)) , (expression (primary (type (classOrInterfaceType ZestManager)) . class))) ))) : (expression new (creator (createdName ZestManager) (classCreatorRest (arguments ( )))))))) ;)) (blockStatement (statement (statementExpression (expression (expression (expression (primary _manager)) . init) ( (expressionList (expression (primary ctx)) , (expression (primary parser))) ))) ;)) (blockStatement (statement if (parExpression ( (expression (expression (primary oldManager)) != (expression (primary (literal null)))) )) (statement (statementExpression (expression (expression (expression (primary log)) . warning) ( (expressionList (expression (expression (expression (primary oldManager)) + (expression (primary (literal " is replaced")))) + (expression (primary _manager)))) ))) ;))) }))))) (classBodyDeclaration (modifier (classOrInterfaceModifier private)) (modifier (classOrInterfaceModifier static)) (memberDeclaration (methodDeclaration (type (classOrInterfaceType Object)) newInstance (formalParameters ( (formalParameterList (formalParameter (type (classOrInterfaceType String)) (variableDeclaratorId clsnm)) , (formalParameter (type (classOrInterfaceType Class)) (variableDeclaratorId klass))) )) throws (qualifiedNameList (qualifiedName ServletException)) (methodBody (block { (blockStatement (localVariableDeclarationStatement (localVariableDeclaration (variableModifier final) (type (classOrInte